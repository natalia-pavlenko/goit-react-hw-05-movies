{"version":3,"file":"static/js/39.dd5eabd2.chunk.js","mappings":"+PAEaA,E,MAAcC,GAAAA,GAAH,+D,SCcxB,EAdgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEjB,OADAC,QAAQC,IAAIF,IAEV,SAACF,EAAD,UACGE,EAAKG,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACvB,OAAO,2BACL,wBAAKD,KACL,uBAAIC,MAFUF,EAIjB,KAIN,EC2BD,EArCoB,WAClB,OAAwCG,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBN,GAAa,GADI,mBAGUO,EAAAA,EAAAA,IAAgBJ,GAH1B,OAGTG,EAHS,OAKfhB,QAAQC,IAAIe,GAEZR,EAAgBQ,GAPD,gDASfJ,EAAS,EAAD,IATO,yBAWfF,GAAa,GAXE,4EAAH,qDAchBM,GACD,GAAE,CAACH,KAEF,gCACGJ,IAAa,sCACbF,EAAaW,OAAS,GACrB,SAACC,EAAD,CAASpB,KAAMQ,KAEf,oEAEDI,IAAS,sCAGf,C,+LCvCKS,EAAO,mCAEbC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGlB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,uBACvBrB,EADuB,EACvBA,KADuB,kBAExBA,EAAKwB,SAFmB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAOC,GAAP,yFACLJ,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBK,IAFf,uBACpB1B,EADoB,EACpBA,KADoB,kBAIrBA,EAAKwB,SAJgB,2CAAH,sDAOdG,EAAe,mCAAG,WAAOb,GAAP,yFACNQ,EAAAA,EAAAA,IAAA,gBAAmBR,EAAnB,oBAAsCO,IADhC,uBACrBrB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAIf4B,EAAe,mCAAG,WAAOd,GAAP,yFACPQ,EAAAA,EAAAA,IAAA,gBACXR,EADW,4BACgBO,IAFT,uBACtBrB,EADsB,EACtBA,KADsB,kBAItBA,EAAK6B,MAJiB,2CAAH,sDAOfX,EAAe,mCAAG,WAAOJ,GAAP,yFACNQ,EAAAA,EAAAA,IAAA,gBACZR,EADY,4BACeO,IAFT,uBACrBrB,EADqB,EACrBA,KADqB,kBAItBA,EAAKwB,SAJiB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","pages/ReviewsPage.js","servises/axios-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 10px;\n`;\n\n\n","import { ReviewsList} from './Reviews.styled';\n\nconst Reiwers = ({ data }) => {\n  console.log(data);\n  return (\n    <ReviewsList>\n      {data.map(({ id, author, content }) => {\n        return <li key={id}>\n          <h4>{author}</h4>\n          <p>{content}</p>\n        </li>;\n      })}\n    </ReviewsList>\n  );\n\n};\nexport default Reiwers;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'servises/axios-api';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst ReviewsPage = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      setIsLoading(true);\n      try {\n        const getReviews = await getMovieReviews(movieId);\n\n        console.log(getReviews);\n\n        setMovieReviews(getReviews);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      {movieReviews.length > 0 ? (\n        <Reviews data={movieReviews} />\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n      {error && <p> Oops...</p>}\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\nconst API_KEY = `d6e594172c33afd2a5e4738620913491`;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data.results\n};\n\nexport const getSearchMovie = async (searchQuery) => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\nexport const getMovieCredits = async (movieId) => {\n  const {data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n"],"names":["ReviewsList","styled","data","console","log","map","id","author","content","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getReviews","getMovieReviews","length","Reviews","API_KEY","axios","getTrendingMovies","results","getSearchMovie","searchQuery","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}