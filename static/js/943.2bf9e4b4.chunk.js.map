{"version":3,"file":"static/js/943.2bf9e4b4.chunk.js","mappings":"yQAsBA,EApBqB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACtB,OACE,gCACGA,IACC,2BACGA,GAAQA,EAAKC,OACd,gBACEC,IAAG,0CAAqCF,EAAKG,eAC7CC,IAAKJ,EAAKC,SAEZ,6BAAKD,EAAKK,gBAGd,SAAC,KAAD,CAAMC,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,sBAEA,SAAC,KAAD,MAGL,E,SCjBYC,GAAaC,E,MAAAA,IAAOC,EAAAA,GAAPD,CAAH,iP,SCavB,EAbiB,SAAC,GAAsB,IAApBF,EAAmB,EAAnBA,GAAII,EAAe,EAAfA,SACtB,OACE,UAACH,EAAD,CAAYD,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaK,KAAK,OACjBD,IAGN,ECqCD,EAzCyB,WAAO,IAAD,IAC7B,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBAFDC,EAAAA,EAAAA,MAEaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,GACvCC,GAAcC,EAAAA,EAAAA,QAAOL,GAqB3B,OAnBAM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBZ,GAAa,GADI,mBAGaa,EAAAA,EAAAA,IAAgBV,GAH7B,UAGTW,EAHS,OAIfC,QAAQC,IAAIJ,GACiB,IAAzBE,EAAcG,OALH,0CAMN,sCANM,OAQfnB,EAAUK,GARK,kDAUfD,EAAS,EAAD,IAVO,yBAYfF,GAAa,GAZE,6EAAH,qDAehBY,GACD,GAAE,CAACT,KAGF,iCACA,0BACA,SAAC,EAAD,CAAUb,GAAImB,EAAYS,QAA1B,4BAEGnB,IAAa,sCACbF,IAAU,SAAC,EAAD,CAAcb,KAAMa,IAC9BI,IAAS,sCAGf,C,+IC9CKkB,EAAO,mCAEbC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGlB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,uBACvBnC,EADuB,EACvBA,KADuB,kBAExBA,EAAKsC,SAFmB,2CAAH,qDAKjBC,EAAc,mCAAG,WAAOC,GAAP,yFACLJ,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBK,IAFf,uBACpBxC,EADoB,EACpBA,KADoB,kBAIrBA,EAAKsC,SAJgB,2CAAH,sDAOdT,EAAe,mCAAG,WAAOV,GAAP,yFACNiB,EAAAA,EAAAA,IAAA,gBAAmBjB,EAAnB,oBAAsCgB,IADhC,uBACrBnC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/MovieDetails/MovieDetails.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","pages/MovieDetails.js","servises/axios-api.js"],"sourcesContent":["import { Link, Outlet } from 'react-router-dom';\n\nconst MovieDetails = ({ data }) => {\n  return (\n    <>\n      {data && (\n        <div>\n          {data && data.title}\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${data.backdrop_path}`}\n            alt={data.title}\n          />\n          <p> {data.overview}</p>\n        </div>\n      )}\n      <Link to=\"cast\">Cast</Link>\n      <Link to=\"reviews\">Reviews</Link>\n\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n// display: inline-flex;\n// align-items: center;\n// gap: 4px;\n// padding: 8px 8px;\n// font-size: 16px;\n// color: black;\n// background-color: #ffffff;\n// text-decoration: none;\n// border: 1px solid #e45580;\n// border-radius: 10px;\n// font-weight: 500;\n// text-transform: uppercase;\n// margin-bottom: 10px;\n// :hover {\n//   color: #ffffff;\n//   background-color: #e45580;\n// }\n// `;","import { StyledLink } from './BackLink.styled';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"18\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\nexport default BackLink;\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { getMovieDetails } from 'servises/axios-api';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport BackLink from 'components/BackLink';\n\n\nconst MovieDetailsPage = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '';\n  const backlinkRef = useRef(backLinkHref);\n\n  useEffect(() => {\n    const getDetails = async () => {\n      setIsLoading(true);\n      try {\n        const moviesDetails = await getMovieDetails(movieId);\n        console.log(getDetails);\n        if (moviesDetails.length === 0) {\n          return <p>not found</p>;\n        }\n        setMovies(movieId);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <>\n    <div>\n    <BackLink to={backlinkRef.current}>Back to list</BackLink>\n    </div>\n      {isLoading && <p>Loading...</p>}\n      {movies && <MovieDetails data={movies} />}\n      {error && <p> Oops...</p>}\n    </>\n  );\n};\nexport default MovieDetailsPage;\n","import axios from 'axios';\nconst API_KEY = `d6e594172c33afd2a5e4738620913491`;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data.results\n};\n\nexport const getSearchMovie = async (searchQuery) => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\nexport const getMovieCredits = async (movieId) => {\n  const {data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["data","title","src","backdrop_path","alt","overview","to","StyledLink","styled","Link","children","size","useState","movies","setMovies","isLoading","setIsLoading","error","setError","movieId","useParams","backLinkHref","useLocation","state","from","backlinkRef","useRef","useEffect","getDetails","getMovieDetails","moviesDetails","console","log","length","current","API_KEY","axios","getTrendingMovies","results","getSearchMovie","searchQuery"],"sourceRoot":""}