{"version":3,"file":"static/js/773.469593ea.chunk.js","mappings":"2JAaA,IAXmB,SAAC,GAAY,IAAXA,EAAU,EAAVA,KACnB,OACE,wBACGA,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACR,2BACE,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAApB,SAA2BC,IAAuB,MAD3CD,EADD,KAOf,C,+HCVYG,E,MAAOC,GAAAA,KAAH,uC,SC6BjB,EA5BqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,UAACL,EAAD,CAAMM,SATa,SAAAC,GAEnB,GADAA,EAAEC,iBACmB,KAAjBJ,EAAMK,OACR,OAAOC,MAAM,+BAEfR,EAAaE,GACbC,EAAS,GACV,EAEC,WACE,kBACEM,SAfe,SAAAJ,GACnBF,EAASE,EAAEK,OAAOC,MACnB,EAcKC,KAAK,QACLD,MAAOT,EACPW,KAAK,OACLC,YAAY,iBAEd,mBAAQD,KAAK,SAAb,wBAGL,E,0BCoBD,EA5Ce,WACb,OAA4BZ,EAAAA,EAAAA,UAAS,MAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAkCf,EAAAA,EAAAA,WAAS,GAA3C,eAAOgB,EAAP,KAAkBC,EAAlB,KACA,GAA0BjB,EAAAA,EAAAA,UAAS,IAAnC,eAAOkB,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAKMC,EAAcF,EAAaG,IAAI,KAyBrC,OAvBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAS,mCAAG,2FAChBT,GAAa,GADG,mBAGaU,EAAAA,EAAAA,IAAeJ,GAH5B,UAGRK,EAHQ,OAIdC,QAAQC,IAAIF,GACgB,IAAxBA,EAAaG,OALH,0CAML,sCANK,OAQdhB,EAAUa,GARI,kDAUdT,EAAS,EAAD,IAVM,yBAYdF,GAAa,GAZC,6EAAH,qDAefS,GAjBC,CAkBF,GAAE,CAACH,KAGF,iCACE,SAAC,EAAD,CAAcxB,aA9BG,SAAAE,GACnBqB,EAAgB,CAAEU,EAAG/B,GACtB,IA6BIe,IAAa,sCACbF,IAAU,SAACmB,EAAA,EAAD,CAAYzC,KAAMsB,IAC5BI,IAAS,sCAGf,C,+IChDKgB,EAAO,mCAEbC,EAAAA,EAAAA,SAAAA,QAAyB,gCAGlB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,qCAAwCD,IADhC,uBACvB1C,EADuB,EACvBA,KADuB,kBAExBA,EAAK6C,SAFmB,2CAAH,qDAKjBV,EAAc,mCAAG,WAAOJ,GAAP,yFACLY,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBX,IAFf,uBACpB/B,EADoB,EACpBA,KADoB,kBAIrBA,EAAK6C,SAJgB,2CAAH,sDAOdC,EAAe,mCAAG,WAAOC,GAAP,yFACNJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,oBAAsCL,IADhC,uBACrB1C,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/MoviesList/MoviesList.js","components/MoviesSearch/MoviesSearch.styled.js","components/MoviesSearch/MoviesSearch.js","pages/Movies.js","servises/axios-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst MoviesList = ({data}) => {\n  return (\n    <ul>\n      {data.map(({ id, original_title }) => (\n        <li key={id}>\n          <Link to={`movies/${id}`}>{original_title}</Link>{' '}\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\nmargin: 30px;\n`;","import { useState } from 'react';\nimport { Form } from './MoviesSearch.styled';\n\nconst MoviesSearch = ({ searchSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return alert('Enter a search name, please');\n    }\n    searchSubmit(query);\n    setQuery('');\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input\n        onChange={handleChange}\n        name=\"query\"\n        value={query}\n        type=\"text\"\n        placeholder=\"Search film\"\n      />\n      <button type=\"submit\"> Search </button>\n    </Form>\n  );\n};\nexport default MoviesSearch;\n","import MoviesSearch from 'components/MoviesSearch/MoviesSearch';\nimport { getSearchMovie } from 'servises/axios-api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchSubmit = query => {\n    setSearchParams({ q: query });\n  };\n  const searchQuery = searchParams.get('q');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    const getSearch = async () => {\n      setIsLoading(true);\n      try {\n        const moviesSearch = await getSearchMovie(searchQuery);\n        console.log(moviesSearch);\n        if (moviesSearch.length === 0) {\n          return <p>not found</p>;\n        }\n        setMovies(moviesSearch);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getSearch();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <MoviesSearch searchSubmit={searchSubmit} />\n      {isLoading && <p>Loading...</p>}\n      {movies && <MoviesList data={movies} />}\n      {error && <p> Oops...</p>}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = `d6e594172c33afd2a5e4738620913491`;\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data.results\n};\n\nexport const getSearchMovie = async (searchQuery) => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\nexport const getMovieCredits = async (movieId) => {\n  const {data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getMovieReviews = async (movieId) => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n"],"names":["data","map","id","original_title","to","Form","styled","searchSubmit","useState","query","setQuery","onSubmit","e","preventDefault","trim","alert","onChange","target","value","name","type","placeholder","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","getSearch","getSearchMovie","moviesSearch","console","log","length","q","MoviesList","API_KEY","axios","getTrendingMovies","results","getMovieDetails","movieId"],"sourceRoot":""}